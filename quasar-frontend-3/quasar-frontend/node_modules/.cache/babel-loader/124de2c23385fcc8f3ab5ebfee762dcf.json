{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jyesupriya\\\\Desktop\\\\quasar-frontend-3\\\\quasar-frontend\\\\src\\\\components\\\\address form\\\\AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './AddressForm.module.css';\nimport Button from '../button/Button';\nimport FormField from '../form field/FormField';\nimport { isValidState, isValidZipCode } from '../regex/regex';\n\nconst AddressForm = ({\n  user,\n  handleSubmit,\n  edit\n}) => {\n  _s();\n\n  const [street, setStreet] = useState(user.street || '');\n  const [city, setCity] = useState(user.city || '');\n  const [zip, setZip] = useState(user.zip || '');\n  const [state, setState] = useState(user.state || '');\n  const [errors, setErrors] = useState({});\n\n  const validateAddress = event => {\n    event.preventDefault();\n    const validState = isValidState(state);\n    const validZip = isValidZipCode(zip);\n    setErrors({\n      street: !street,\n      city: !city,\n      state: !validState,\n      zip: !validZip\n    });\n\n    if (validZip && validState && city && street) {\n      handleSubmit(street, city, state, zip);\n    }\n  };\n\n  const addressData = edit || user.street || user.city || user.state || user.zip;\n  const enabled = street && city && state && zip;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${styles['form-container']} p-2 m-4`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), addressData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        type: \"text\",\n        name: \"Street\",\n        value: street,\n        changeCallback: setStreet,\n        error: errors.street,\n        errorMessage: \"Street is required\",\n        disabled: !edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        type: \"text\",\n        name: \"City\",\n        value: city,\n        changeCallback: setCity,\n        error: errors.city,\n        errorMessage: \"City is required\",\n        disabled: !edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        type: \"text\",\n        name: \"State\",\n        error: errors.state,\n        errorMessage: \"Must use a state abbreviation. (eg. KS)\",\n        value: state,\n        changeCallback: setState,\n        disabled: !edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        type: \"text\",\n        name: \"Zip Code\",\n        value: zip,\n        error: errors.zip,\n        errorMessage: \"Must fit the format XXXXX or XXXXX-XXXX\",\n        changeCallback: setZip,\n        disabled: !edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), edit && /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Submit\",\n        onClick: validateAddress,\n        disabled: !enabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-dark mt-3\",\n      children: \"No Address Provided\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddressForm, \"5hv6qG6lvS9ABcv4U21SGioPmVk=\");\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["C:/Users/jyesupriya/Desktop/quasar-frontend-3/quasar-frontend/src/components/address form/AddressForm.js"],"names":["React","useState","styles","Button","FormField","isValidState","isValidZipCode","AddressForm","user","handleSubmit","edit","street","setStreet","city","setCity","zip","setZip","state","setState","errors","setErrors","validateAddress","event","preventDefault","validState","validZip","addressData","enabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddressForm.module.css';\r\nimport Button from '../button/Button';\r\nimport FormField from '../form field/FormField';\r\nimport { isValidState, isValidZipCode } from '../regex/regex';\r\n\r\nconst AddressForm = ({ user, handleSubmit, edit }) => {\r\n  const [street, setStreet] = useState(user.street || '');\r\n  const [city, setCity] = useState(user.city || '');\r\n  const [zip, setZip] = useState(user.zip || '');\r\n  const [state, setState] = useState(user.state || '');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateAddress = (event) => {\r\n    event.preventDefault();\r\n    const validState = isValidState(state);\r\n    const validZip = isValidZipCode(zip);\r\n    setErrors({\r\n      street: !street,\r\n      city: !city,\r\n      state: !validState,\r\n      zip: !validZip\r\n    });\r\n    if (validZip && validState && city && street) {\r\n      handleSubmit(street, city, state, zip);\r\n    }\r\n  };\r\n\r\n  const addressData = edit || user.street || user.city || user.state || user.zip;\r\n  const enabled = street && city && state && zip;\r\n\r\n  return (\r\n    <form className={`${styles['form-container']} p-2 m-4`}>\r\n      <h3 className=\"text-center\">Address</h3>\r\n      {addressData\r\n        ? (\r\n          <>\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Street\"\r\n              value={street}\r\n              changeCallback={setStreet}\r\n              error={errors.street}\r\n              errorMessage=\"Street is required\"\r\n              disabled={!edit}\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"City\"\r\n              value={city}\r\n              changeCallback={setCity}\r\n              error={errors.city}\r\n              errorMessage=\"City is required\"\r\n              disabled={!edit}\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"State\"\r\n              error={errors.state}\r\n              errorMessage=\"Must use a state abbreviation. (eg. KS)\"\r\n              value={state}\r\n              changeCallback={setState}\r\n              disabled={!edit}\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Zip Code\"\r\n              value={zip}\r\n              error={errors.zip}\r\n              errorMessage=\"Must fit the format XXXXX or XXXXX-XXXX\"\r\n              changeCallback={setZip}\r\n              disabled={!edit}\r\n            />\r\n            {edit && <Button text=\"Submit\" onClick={validateAddress} disabled={!enabled} />}\r\n          </>\r\n        ) : <p className=\"text-center text-dark mt-3\">No Address Provided</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jyesupriya\\\\Desktop\\\\quasar-frontend-3\\\\quasar-frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport LogRocket from 'logrocket';\nimport { useAppContext } from '../utils/Context';\nimport { QUASAR_API, ERROR } from '../Constants'; // eslint-disable-next-line import/no-unresolved\n\nimport styles from './Login.module.css';\nimport FormField from '../form field/FormField';\nimport ErrorPage from '../error page/ErrorPage';\nimport Button from '../button/Button';\n/**\r\n * Component for handling user login attempts.\r\n */\n\nconst Login = () => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(false);\n  const [errorCode, setErrorCode] = useState(false);\n  const history = useHistory();\n  const {\n    setIsLoggedIn,\n    setUserEmail\n  } = useAppContext();\n  /**\r\n     * Posts email and password to db to see if the information is valid.\r\n     * @param {e} mouse click event\r\n     */\n\n  const handleSubmit = async event => {\n    setError(false);\n    event.preventDefault();\n    const customerLogin = {\n      email,\n      password\n    };\n    let serverError;\n    await fetch(`${QUASAR_API}/customers/login`, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(customerLogin)\n    }).then(async response => {\n      if (!response.ok) {\n        serverError = response.status;\n        throw new Error( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ERROR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 27\n        }, this));\n      }\n\n      const token = await response.text();\n      sessionStorage.setItem('token', token); // parse JWT for payload containing user email\n\n      const user = JSON.parse(atob(token.split('.')[1])); // set user email in storage\n\n      setIsLoggedIn(true);\n      setUserEmail(user.sub);\n      history.push('/');\n      LogRocket.log(`User logged in with the email '${user.sub}'`);\n    }).catch(credentials => {\n      if (credentials !== customerLogin || customerLogin === '') {\n        LogRocket.error('Invalid email or password.');\n        setError(true);\n      } // if server doesn't respond with an error message, display a 503\n\n\n      setErrorCode(serverError || 503);\n      LogRocket.error(serverError || '503 error: the service is unavailable.');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!errorCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.login}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the login page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this) : errorCode && (errorCode === 404 || errorCode === 400) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.login}`,\n      children: \"Welcome to the login page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this) : errorCode && errorCode !== 404 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.code}`,\n      children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n        errorCode: errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.login}`,\n      children: \"Welcome to the login page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `jumbotron ${styles.jumbotron}`,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.title,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (errorCode === 404 || errorCode === 400) && error ? /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: styles.error,\n              children: \" Invalid email or password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"email\",\n            name: \"Email\",\n            value: email,\n            changeCallback: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"password\",\n            name: \"Password\",\n            value: password,\n            changeCallback: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [\"New customer?\", /*#__PURE__*/_jsxDEV(Link, {\n              id: \"register\",\n              to: \"/signup\",\n              className: `${styles.link}`,\n              children: \"Sign up here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"x5JbB+xvgEuLtTTDwrhGjtbTqxA=\", false, function () {\n  return [useHistory, useAppContext];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/jyesupriya/Desktop/quasar-frontend-3/quasar-frontend/src/components/Login/Login.js"],"names":["React","useState","useHistory","Link","LogRocket","useAppContext","QUASAR_API","ERROR","styles","FormField","ErrorPage","Button","Login","password","setPassword","email","setEmail","error","setError","errorCode","setErrorCode","history","setIsLoggedIn","setUserEmail","handleSubmit","event","preventDefault","customerLogin","serverError","fetch","method","headers","Headers","body","JSON","stringify","then","response","ok","status","Error","token","text","sessionStorage","setItem","user","parse","atob","split","sub","push","log","catch","credentials","login","code","jumbotron","title","link"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport LogRocket from 'logrocket';\r\nimport { useAppContext } from '../utils/Context';\r\nimport { QUASAR_API, ERROR } from '../Constants';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport styles from './Login.module.css';\r\nimport FormField from '../form field/FormField';\r\nimport ErrorPage from '../error page/ErrorPage';\r\nimport Button from '../button/Button';\r\n/**\r\n * Component for handling user login attempts.\r\n */\r\nconst Login = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [errorCode, setErrorCode] = useState(false);\r\n  const history = useHistory();\r\n  const { setIsLoggedIn, setUserEmail } = useAppContext();\r\n\r\n  /**\r\n     * Posts email and password to db to see if the information is valid.\r\n     * @param {e} mouse click event\r\n     */\r\n  const handleSubmit = async (event) => {\r\n    setError(false);\r\n    event.preventDefault();\r\n    const customerLogin = {\r\n      email,\r\n      password\r\n    };\r\n    let serverError;\r\n    await fetch(`${QUASAR_API}/customers/login`, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: (JSON.stringify(customerLogin))\r\n    })\r\n      .then(async (response) => {\r\n        if (!response.ok) {\r\n          serverError = response.status;\r\n          throw new Error(<p>{ERROR}</p>);\r\n        }\r\n        const token = await response.text();\r\n        sessionStorage.setItem('token', token);\r\n        // parse JWT for payload containing user email\r\n        const user = JSON.parse(atob(token.split('.')[1]));\r\n        // set user email in storage\r\n        setIsLoggedIn(true);\r\n        setUserEmail(user.sub);\r\n        history.push('/');\r\n        LogRocket.log(`User logged in with the email '${user.sub}'`);\r\n      })\r\n      .catch((credentials) => {\r\n        if (credentials !== customerLogin || customerLogin === '') {\r\n          LogRocket.error('Invalid email or password.');\r\n          setError(true);\r\n        }\r\n        // if server doesn't respond with an error message, display a 503\r\n        setErrorCode(serverError || 503);\r\n        LogRocket.error(serverError || '503 error: the service is unavailable.');\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {/* nested ternary operator that checks for an error code, if there is no error code\r\n      the title will be displayed, if there is an error code and the error code is a\r\n      404 it will display the title, if it is not a 404, it will display the error code with\r\n      an error message */}\r\n      {!errorCode\r\n        ? (<div className={`${styles.login}`}><p>Welcome to the login page!</p></div>)\r\n        : errorCode && (errorCode === 404 || errorCode === 400)\r\n          ? (<div className={`${styles.login}`}>Welcome to the login page!</div>)\r\n          : errorCode && errorCode !== 404\r\n            ? (<div className={`${styles.code}`}><ErrorPage errorCode={errorCode} /></div>)\r\n            : (<div className={`${styles.login}`}>Welcome to the login page!</div>)}\r\n      <div>\r\n        <div className={`jumbotron ${styles.jumbotron}`}>\r\n          <form onSubmit={handleSubmit}>\r\n            <h2 className={styles.title}>Login</h2>\r\n            <div>\r\n              {/* an error message is diaplyed if the login details to not match a valid user */}\r\n              {(errorCode === 404 || errorCode === 400) && error\r\n                ? <h5 className={styles.error}> Invalid email or password</h5>\r\n                : null}\r\n            </div>\r\n            <FormField\r\n              type=\"email\"\r\n              name=\"Email\"\r\n              value={email}\r\n              changeCallback={setEmail}\r\n            />\r\n            <FormField\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              value={password}\r\n              changeCallback={setPassword}\r\n            />\r\n            <Button type=\"submit\" text=\"Submit\" />\r\n            <div className=\"mt-3\">\r\n              New customer?\r\n              <Link id=\"register\" to=\"/signup\" className={`${styles.link}`}>Sign up here!</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jyesupriya\\\\Desktop\\\\quasar-frontend-3\\\\quasar-frontend\\\\src\\\\components\\\\customer\\\\CustomerPage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LogRocket from 'logrocket';\nimport { useAppContext } from '../utils/Context';\nimport FormField from '../form field/FormField';\nimport ErrorPage from '../error page/ErrorPage';\nimport { isValidEmail, isValidName, isValidPassword, isValidState, isValidZipCode, isValidPhone } from '../regex/regex';\nimport { PASSWORD_INSTRUCTIONS, QUASAR_API, ERROR } from '../Constants';\nimport styles from './Customer.module.css';\nimport Button from '../button/Button';\n\nconst CustomerPage = () => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [street, setStreet] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zip, setZip] = useState('');\n  const [password, setPassword] = useState('');\n  const [reenterPassword, setReenterPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [errorCode, setErrorCode] = useState();\n  const history = useHistory();\n  const {\n    setIsLoggedIn,\n    setUserEmail\n  } = useAppContext();\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const invalidEmail = !isValidEmail(email);\n\n    if (invalidEmail) {\n      LogRocket.error('Invalid email.');\n    }\n\n    const invalidFirst = !isValidName(firstName);\n\n    if (invalidFirst) {\n      LogRocket.error('Invalid first name.');\n    }\n\n    const invalidLast = !isValidName(lastName);\n\n    if (invalidLast) {\n      LogRocket.error('Invalid last name.');\n    }\n\n    const invalidPass = !isValidPassword(password);\n\n    if (invalidPass) {\n      LogRocket.error('Invalid password.');\n    }\n\n    const invalidReenterPass = password !== reenterPassword || reenterPassword === '';\n\n    if (invalidReenterPass) {\n      LogRocket.error('Password was not re-entered correctly.');\n    }\n\n    const invalidState = state && !isValidState(state);\n\n    if (invalidState) {\n      LogRocket.error('Invalid state. Must use a state abbreviation. (eg. KS)');\n    }\n\n    const invalidZip = zip && !isValidZipCode(zip);\n\n    if (invalidZip) {\n      LogRocket.error('Invalid zip code. Must fit the format XXXXX or XXXXX-XXXX');\n    }\n\n    const invalidPhone = phone && !isValidPhone(phone);\n\n    if (invalidPhone) {\n      LogRocket.error('Invalid phone number. Phone number should meet one of these formats: (111) 222-3333 | 1112223333 | 111-222-3333');\n    }\n\n    setErrors({\n      email: invalidEmail,\n      firstName: invalidFirst,\n      lastName: invalidLast,\n      password: invalidPass,\n      reenterPassword: invalidReenterPass,\n      state: invalidState,\n      zip: invalidZip,\n      phone: invalidPhone\n    }); // don't submit the form if any fields didn't pass validation\n\n    if (invalidEmail || invalidFirst || invalidLast || invalidPass || invalidReenterPass || invalidState || invalidZip || invalidPhone) return; // creates customer object for request, placing null for optional fields that were not entered\n\n    const createCustomer = {\n      firstName,\n      lastName,\n      email,\n      password,\n      street: street !== '' ? street : null,\n      city: city !== '' ? city : null,\n      state: state !== '' ? state : null,\n      zip: zip !== '' ? zip : null,\n      phone: phone !== '' ? phone : null,\n      image: image !== '' ? image : null\n    };\n    const customerLogin = {\n      email,\n      password\n    };\n    let serverError;\n    await fetch(`${QUASAR_API}/customers`, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(createCustomer)\n    }).then(response => {\n      if (!response.ok) {\n        serverError = response.status;\n        throw new Error( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ERROR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }, this));\n      }\n    }).then(() => {\n      fetch(`${QUASAR_API}/customers/login`, {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(customerLogin)\n      }).then(async response => {\n        if (!response.ok) {\n          serverError = response.status;\n          throw new Error( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ERROR\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 31\n          }, this));\n        }\n\n        const token = await response.text();\n        sessionStorage.setItem('token', token); // parse JWT for payload containing user email\n\n        const user = JSON.parse(atob(token.split('.')[1])); // set user email in storage\n\n        sessionStorage.setItem('user', user.sub);\n        history.push('/');\n        setIsLoggedIn(true);\n        setUserEmail(user.sub);\n      });\n      LogRocket.log(`User '${firstName} ${lastName}' was added to the database. Registered with the email: '${email}'`);\n      LogRocket.log(`User '${firstName} ${lastName}' logged in with the email '${email}'`);\n      LogRocket.identify('123456', {\n        name: `${firstName} ${lastName}`,\n        email: `${email}`\n      });\n    }).catch(() => {\n      // if server doesn't respond with an error message, display a 503\n      setErrorCode(serverError || 503);\n      LogRocket.error(serverError || '503 error: the service is unavailable.'); // scrolls back to the top so user can see the error\n\n      document.body.scrollTop = 0; // For Safari\n\n      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!errorCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signUp,\n      children: \"Welcome to the sign up page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this) : errorCode && errorCode === 409 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.conflict,\n      children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n        errorCode: errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 14\n    }, this) : errorCode && errorCode !== 409 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.code,\n      children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n        errorCode: errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signUp,\n      children: \"Welcome to the sign up page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${styles.container}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `jumbotron ${styles.jumbotron}`,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.title,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"First Name*\",\n            value: firstName,\n            changeCallback: setFirstName,\n            error: errors.firstName,\n            errorMessage: \"Must be a valid name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"Last Name*\",\n            value: lastName,\n            changeCallback: setLastName,\n            error: errors.lastName,\n            errorMessage: \"Must be a valid name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"Email*\",\n            value: email,\n            changeCallback: setEmail,\n            error: errors.email,\n            errorMessage: \"Must be a valid email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"col-sm-7 offset-4 mb-2\",\n              children: PASSWORD_INSTRUCTIONS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"password\",\n            name: \"Password*\",\n            value: password,\n            changeCallback: setPassword,\n            error: errors.password,\n            errorMessage: \"Must be a valid password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"password\",\n            name: \"Re-Enter Password*\",\n            value: reenterPassword,\n            changeCallback: setReenterPassword,\n            error: errors.reenterPassword,\n            errorMessage: \"Must match first password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"Street\",\n            value: street,\n            changeCallback: setStreet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"City\",\n            value: city,\n            changeCallback: setCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"State\",\n            value: state,\n            changeCallback: setState,\n            error: errors.state,\n            errorMessage: \"Must use a state abbreviation. (eg. KS)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"text\",\n            name: \"Zip Code\",\n            value: zip,\n            changeCallback: setZip,\n            error: errors.zip,\n            errorMessage: \"Must fit the format XXXXX or XXXXX-XXXX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"phone\",\n            name: \"Phone Number\",\n            value: phone,\n            changeCallback: setPhone,\n            error: errors.phone,\n            errorMessage: \"Phone number should meet one of these formats: (111) 222-3333 | 1112223333 | 111-222-3333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"file\",\n            name: \"Profile Image\",\n            value: image,\n            changeCallback: setImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Sign Up\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerPage, \"c9LDbwA2NDqeebgItyc7pI+5UOI=\", false, function () {\n  return [useHistory, useAppContext];\n});\n\n_c = CustomerPage;\nexport default CustomerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"sources":["C:/Users/jyesupriya/Desktop/quasar-frontend-3/quasar-frontend/src/components/customer/CustomerPage.js"],"names":["React","useState","useHistory","LogRocket","useAppContext","FormField","ErrorPage","isValidEmail","isValidName","isValidPassword","isValidState","isValidZipCode","isValidPhone","PASSWORD_INSTRUCTIONS","QUASAR_API","ERROR","styles","Button","CustomerPage","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","street","setStreet","city","setCity","state","setState","zip","setZip","password","setPassword","reenterPassword","setReenterPassword","image","setImage","errorCode","setErrorCode","history","setIsLoggedIn","setUserEmail","errors","setErrors","handleSubmit","event","preventDefault","invalidEmail","error","invalidFirst","invalidLast","invalidPass","invalidReenterPass","invalidState","invalidZip","invalidPhone","createCustomer","customerLogin","serverError","fetch","method","headers","Headers","body","JSON","stringify","then","response","ok","status","Error","token","text","sessionStorage","setItem","user","parse","atob","split","sub","push","log","identify","name","catch","document","scrollTop","documentElement","signUp","conflict","code","container","jumbotron","title"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LogRocket from 'logrocket';\r\nimport { useAppContext } from '../utils/Context';\r\nimport FormField from '../form field/FormField';\r\nimport ErrorPage from '../error page/ErrorPage';\r\nimport {\r\n  isValidEmail, isValidName, isValidPassword, isValidState, isValidZipCode, isValidPhone\r\n} from '../regex/regex';\r\nimport { PASSWORD_INSTRUCTIONS, QUASAR_API, ERROR } from '../Constants';\r\nimport styles from './Customer.module.css';\r\nimport Button from '../button/Button';\r\n\r\nconst CustomerPage = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zip, setZip] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [reenterPassword, setReenterPassword] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [errorCode, setErrorCode] = useState();\r\n  const history = useHistory();\r\n  const { setIsLoggedIn, setUserEmail } = useAppContext();\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const invalidEmail = !isValidEmail(email);\r\n    if (invalidEmail) {\r\n      LogRocket.error('Invalid email.');\r\n    }\r\n    const invalidFirst = !isValidName(firstName);\r\n    if (invalidFirst) {\r\n      LogRocket.error('Invalid first name.');\r\n    }\r\n    const invalidLast = !isValidName(lastName);\r\n    if (invalidLast) {\r\n      LogRocket.error('Invalid last name.');\r\n    }\r\n    const invalidPass = !isValidPassword(password);\r\n    if (invalidPass) {\r\n      LogRocket.error('Invalid password.');\r\n    }\r\n    const invalidReenterPass = password !== reenterPassword || reenterPassword === '';\r\n    if (invalidReenterPass) {\r\n      LogRocket.error('Password was not re-entered correctly.');\r\n    }\r\n    const invalidState = state && !isValidState(state);\r\n    if (invalidState) {\r\n      LogRocket.error('Invalid state. Must use a state abbreviation. (eg. KS)');\r\n    }\r\n    const invalidZip = zip && !isValidZipCode(zip);\r\n    if (invalidZip) {\r\n      LogRocket.error('Invalid zip code. Must fit the format XXXXX or XXXXX-XXXX');\r\n    }\r\n    const invalidPhone = phone && !isValidPhone(phone);\r\n    if (invalidPhone) {\r\n      LogRocket.error('Invalid phone number. Phone number should meet one of these formats: (111) 222-3333 | 1112223333 | 111-222-3333');\r\n    }\r\n\r\n    setErrors({\r\n      email: invalidEmail,\r\n      firstName: invalidFirst,\r\n      lastName: invalidLast,\r\n      password: invalidPass,\r\n      reenterPassword: invalidReenterPass,\r\n      state: invalidState,\r\n      zip: invalidZip,\r\n      phone: invalidPhone\r\n    });\r\n\r\n    // don't submit the form if any fields didn't pass validation\r\n    if (invalidEmail || invalidFirst || invalidLast || invalidPass || invalidReenterPass\r\n      || invalidState || invalidZip || invalidPhone) return;\r\n\r\n    // creates customer object for request, placing null for optional fields that were not entered\r\n    const createCustomer = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      street: street !== '' ? street : null,\r\n      city: city !== '' ? city : null,\r\n      state: state !== '' ? state : null,\r\n      zip: zip !== '' ? zip : null,\r\n      phone: phone !== '' ? phone : null,\r\n      image: image !== '' ? image : null\r\n    };\r\n    const customerLogin = {\r\n      email,\r\n      password\r\n    };\r\n    let serverError;\r\n    await fetch(`${QUASAR_API}/customers`, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: JSON.stringify(createCustomer)\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          serverError = response.status;\r\n          throw new Error(<p>{ERROR}</p>);\r\n        }\r\n      })\r\n      .then(() => {\r\n        fetch(`${QUASAR_API}/customers/login`, {\r\n          method: 'POST',\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n          }),\r\n          body: JSON.stringify(customerLogin)\r\n        })\r\n          .then(async (response) => {\r\n            if (!response.ok) {\r\n              serverError = response.status;\r\n              throw new Error(<p>{ERROR}</p>);\r\n            }\r\n            const token = await response.text();\r\n            sessionStorage.setItem('token', token);\r\n            // parse JWT for payload containing user email\r\n            const user = JSON.parse(atob(token.split('.')[1]));\r\n            // set user email in storage\r\n            sessionStorage.setItem('user', user.sub);\r\n            history.push('/');\r\n            setIsLoggedIn(true);\r\n            setUserEmail(user.sub);\r\n          });\r\n        LogRocket.log(`User '${firstName} ${lastName}' was added to the database. Registered with the email: '${email}'`);\r\n        LogRocket.log(`User '${firstName} ${lastName}' logged in with the email '${email}'`);\r\n        LogRocket.identify('123456', {\r\n          name: `${firstName} ${lastName}`,\r\n          email: `${email}`\r\n        });\r\n      })\r\n      .catch(() => {\r\n        // if server doesn't respond with an error message, display a 503\r\n        setErrorCode(serverError || 503);\r\n        LogRocket.error(serverError || '503 error: the service is unavailable.');\r\n        // scrolls back to the top so user can see the error\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!errorCode\r\n        ? (<div className={styles.signUp}>Welcome to the sign up page!</div>)\r\n        : errorCode && errorCode === 409\r\n          ? (<div className={styles.conflict}><ErrorPage errorCode={errorCode} /></div>)\r\n          : errorCode && errorCode !== 409\r\n            ? (<div className={styles.code}><ErrorPage errorCode={errorCode} /></div>)\r\n            : (<div className={styles.signUp}>Welcome to the sign up page!</div>)}\r\n      <div className={`container ${styles.container}`}>\r\n        <div className={`jumbotron ${styles.jumbotron}`}>\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <h1 className={styles.title}>Register</h1>\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"First Name*\"\r\n              value={firstName}\r\n              changeCallback={setFirstName}\r\n              error={errors.firstName}\r\n              errorMessage=\"Must be a valid name\"\r\n              required\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Last Name*\"\r\n              value={lastName}\r\n              changeCallback={setLastName}\r\n              error={errors.lastName}\r\n              errorMessage=\"Must be a valid name\"\r\n              required\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Email*\"\r\n              value={email}\r\n              changeCallback={setEmail}\r\n              error={errors.email}\r\n              errorMessage=\"Must be a valid email\"\r\n              required\r\n            />\r\n            <div className=\"form-group row\">\r\n              <small className=\"col-sm-7 offset-4 mb-2\">{PASSWORD_INSTRUCTIONS}</small>\r\n            </div>\r\n            <FormField\r\n              type=\"password\"\r\n              name=\"Password*\"\r\n              value={password}\r\n              changeCallback={setPassword}\r\n              error={errors.password}\r\n              errorMessage=\"Must be a valid password\"\r\n              required\r\n            />\r\n            <FormField\r\n              type=\"password\"\r\n              name=\"Re-Enter Password*\"\r\n              value={reenterPassword}\r\n              changeCallback={setReenterPassword}\r\n              error={errors.reenterPassword}\r\n              errorMessage=\"Must match first password\"\r\n              required\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Street\"\r\n              value={street}\r\n              changeCallback={setStreet}\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"City\"\r\n              value={city}\r\n              changeCallback={setCity}\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"State\"\r\n              value={state}\r\n              changeCallback={setState}\r\n              error={errors.state}\r\n              errorMessage=\"Must use a state abbreviation. (eg. KS)\"\r\n            />\r\n            <FormField\r\n              type=\"text\"\r\n              name=\"Zip Code\"\r\n              value={zip}\r\n              changeCallback={setZip}\r\n              error={errors.zip}\r\n              errorMessage=\"Must fit the format XXXXX or XXXXX-XXXX\"\r\n            />\r\n            <FormField\r\n              type=\"phone\"\r\n              name=\"Phone Number\"\r\n              value={phone}\r\n              changeCallback={setPhone}\r\n              error={errors.phone}\r\n              errorMessage=\"Phone number should meet one of these formats: (111) 222-3333 | 1112223333 | 111-222-3333\"\r\n            />\r\n            <FormField\r\n              type=\"file\"\r\n              name=\"Profile Image\"\r\n              value={image}\r\n              changeCallback={setImage}\r\n            />\r\n            <Button text=\"Sign Up\" type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jyesupriya\\\\Desktop\\\\quasar-frontend-3\\\\quasar-frontend\\\\src\\\\components\\\\user profile\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddressForm from '../address form/AddressForm';\nimport Button from '../button/Button';\nimport ErrorPage from '../error page/ErrorPage';\nimport SuccessMessage from '../success message/SuccessMessage';\nimport styles from './UserProfile.module.css';\n/**\r\n * Component that slides out to display the current user's account details\r\n * @param {Object} user - the user object to display details from\r\n * @param {function} toggleCallback - the function to call when the panel slides offscreen\r\n */\n\nconst UserProfile = ({\n  user,\n  setUser,\n  toggleCallback\n}) => {\n  _s();\n\n  const [panelStyle, setPanelStyle] = useState(styles['panel-slide-out']);\n  const [editAddress, setEditAddress] = useState(false);\n  const [feedbackMessage, setFeedbackMessage] = useState();\n  /**\r\n   * changes the profile animation to slide back in, and waits\r\n   * a second for the animation to play before removing itself\r\n   */\n\n  const closeProfile = () => {\n    setPanelStyle(styles['panel-slide-in']);\n    setTimeout(() => toggleCallback(false), 1000);\n  };\n\n  const updateAddress = async (street, city, state, zip) => {\n    const updatedUser = user;\n    updatedUser.street = street;\n    updatedUser.city = city;\n    updatedUser.state = state;\n    updatedUser.zip = zip;\n    setFeedbackMessage();\n    let errorCode;\n    await fetch(`http://localhost:8080/customers/${user.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(updatedUser)\n    }).then(async response => {\n      if (response.ok) {\n        setFeedbackMessage( /*#__PURE__*/_jsxDEV(SuccessMessage, {\n          message: \"Your address has been updated.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this));\n        setUser(await response.json());\n        setEditAddress(false);\n      } else {\n        errorCode = response.status;\n      }\n    }).catch(() => {\n      setFeedbackMessage( /*#__PURE__*/_jsxDEV(ErrorPage, {\n        errorCode: errorCode || 503\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this));\n    });\n  };\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['user-profile']} ${panelStyle}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: closeProfile,\n        className: `btn ${styles['close-profile-button']}`,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-angle-double-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4 text-center\",\n        children: \"Could not load user data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles['user-profile']} ${panelStyle}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: closeProfile,\n      className: `btn ${styles['close-profile-button']}`,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-angle-double-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `text-center m-4 ${styles['user-full-name']}`,\n      children: `${user.firstName} ${user.lastName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['feedback-container'],\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setEditAddress(true);\n      },\n      text: \"Edit Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddressForm, {\n      user: user,\n      handleSubmit: updateAddress,\n      edit: editAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/wishlist\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `btn btn-primary ${styles}`,\n          onClick: closeProfile,\n          children: \"View Wish List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"/Hy6AV6JdgpjeT3uLz6hYdP7mZY=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/jyesupriya/Desktop/quasar-frontend-3/quasar-frontend/src/components/user profile/UserProfile.js"],"names":["React","useState","Link","AddressForm","Button","ErrorPage","SuccessMessage","styles","UserProfile","user","setUser","toggleCallback","panelStyle","setPanelStyle","editAddress","setEditAddress","feedbackMessage","setFeedbackMessage","closeProfile","setTimeout","updateAddress","street","city","state","zip","updatedUser","errorCode","fetch","id","method","headers","Headers","body","JSON","stringify","then","response","ok","json","status","catch","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddressForm from '../address form/AddressForm';\r\nimport Button from '../button/Button';\r\nimport ErrorPage from '../error page/ErrorPage';\r\nimport SuccessMessage from '../success message/SuccessMessage';\r\nimport styles from './UserProfile.module.css';\r\n\r\n/**\r\n * Component that slides out to display the current user's account details\r\n * @param {Object} user - the user object to display details from\r\n * @param {function} toggleCallback - the function to call when the panel slides offscreen\r\n */\r\nconst UserProfile = ({ user, setUser, toggleCallback }) => {\r\n  const [panelStyle, setPanelStyle] = useState(styles['panel-slide-out']);\r\n  const [editAddress, setEditAddress] = useState(false);\r\n  const [feedbackMessage, setFeedbackMessage] = useState();\r\n\r\n  /**\r\n   * changes the profile animation to slide back in, and waits\r\n   * a second for the animation to play before removing itself\r\n   */\r\n  const closeProfile = () => {\r\n    setPanelStyle(styles['panel-slide-in']);\r\n    setTimeout(() => toggleCallback(false), 1000);\r\n  };\r\n\r\n  const updateAddress = async (street, city, state, zip) => {\r\n    const updatedUser = user;\r\n    updatedUser.street = street;\r\n    updatedUser.city = city;\r\n    updatedUser.state = state;\r\n    updatedUser.zip = zip;\r\n    setFeedbackMessage();\r\n    let errorCode;\r\n    await fetch(`http://localhost:8080/customers/${user.id}`, {\r\n      method: 'PUT',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: JSON.stringify(updatedUser)\r\n    }).then(async (response) => {\r\n      if (response.ok) {\r\n        setFeedbackMessage(<SuccessMessage message=\"Your address has been updated.\" />);\r\n        setUser(await response.json());\r\n        setEditAddress(false);\r\n      } else {\r\n        errorCode = response.status;\r\n      }\r\n    }).catch(() => {\r\n      setFeedbackMessage(<ErrorPage errorCode={errorCode || 503} />);\r\n    });\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className={`${styles['user-profile']} ${panelStyle}`}>\r\n        <button type=\"button\" onClick={closeProfile} className={`btn ${styles['close-profile-button']}`}>\r\n          <i className=\"fas fa-angle-double-right\" />\r\n        </button>\r\n        <h1 className=\"mt-4 text-center\">Could not load user data</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles['user-profile']} ${panelStyle}`}>\r\n      <button type=\"button\" onClick={closeProfile} className={`btn ${styles['close-profile-button']}`}>\r\n        <i className=\"fas fa-angle-double-right\" />\r\n      </button>\r\n      <h1 className={`text-center m-4 ${styles['user-full-name']}`}>{`${user.firstName} ${user.lastName}`}</h1>\r\n      <div className={styles['feedback-container']}>\r\n        {feedbackMessage}\r\n      </div>\r\n      <Button onClick={() => { setEditAddress(true); }} text=\"Edit Information\" />\r\n      <AddressForm user={user} handleSubmit={updateAddress} edit={editAddress} />\r\n      <div className=\"text-center mt-2\">\r\n        <Link to=\"/wishlist\">\r\n          <button type=\"button\" className={`btn btn-primary ${styles}`} onClick={closeProfile}>View Wish List</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}